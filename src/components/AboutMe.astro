---
import ExperienceCarousel from './ExperienceCarousel.astro';
import SkillCard from './SkillCard.astro';

const skills = [
  {
    name: "AI Software Engineering",
    description: "Experiment and deploy AI-powered applications using LLMs, LangChain, Semantic Kernel, and Azure AI services",
    logoSrc: "/assets/icons8-experiment-50.png"
  },
  {
    name: "Data Engineering",
    description: "High-performance pipelines with Azure Functions, KEDA, Kubernetes, PySpark, and Synapse",
    logoSrc: "/assets/icons8-data-pipeline-32.png"
  },
  {
    name: "Cloud Architecture",
    description: "Scalable distributed systems on Azure with microservices and containerization",
    logoSrc: "/assets/icons8-cloud-engineering-50.png"
  },
  {
    name: "DevOps & GitOps",
    description: "CI/CD pipelines, infrastructure as code, and automated deployment strategies",
    logoSrc: "/assets/icons8-devops-50.png"
  },
  {
    name: "Engineering Leadership",
    description: "Leading cross-functional engineering teams and driving technical strategy",
    logoSrc: "/assets/icons8-engineer-50.png"
  },
  {
    name: "Sustainable Software Engineering",
    description: "Applying sustainability principles in software and data engineering practices",
    logoSrc: "/assets/icons8-sustainability-50.png"
  }
];

const experiences = [
  {
    id: 1,
    title: "Lead Software & AI Engineer",
    company: "Innovation Team, Department of Employment and Workplace",
    duration: "2025 - Present",
    achievements: [
      "Design and build scalable experimentation and AIOps platforms",
      "Enable cheap, fast, evaluation-based AI experiments",
      "Ensure consistent flow from experimentation to production"
    ],
    logo: "/assets/dewr_logo.jpeg",
  },
  {
    id: 2,
    title: "Lead Software Engineer",
    company: "Digital Delivery, Department of Employment and Workplace",
    duration: "2024 - 2025",
    achievements: [
      "Built scalable platforms for distributed services",
      "Focused on observability, messaging, and transactional integrity",
      "Led cross-functional engineering teams"
    ],
    logo: "/assets/dewr_logo.jpeg"
  },
  {
    id: 3,
    title: "Senior Software Engineer",
    company: "Microsoft",
    duration: "2018 - 2024",
    achievements: [
      "Software Engineering Lead - Development and leading teams of software engineers to deliver a globally used toolset within Microsoft ISD",
      "Data Engineering - Design and Development of high performance data pipelines using Azure Functions, KEDA, Kubernetes, PySpark, Synapse, Datalake, and Azure DevOps",
      "Custom Copilot development - Development of custom OpenAI-powered copilots for both internal products and customer products using Python Flask, LangChain, Azure OpenAI",
      "Sustainability - thought and action leadership in applying sustainability principles in Software and Data Engineering. Design and development of sustainability data pipeline for consumption in Microsoft Sustainability Manager",
      "Distributed systems design and engineering - Design and development of a distributed data pipeline on Kubernetes (KEDA). Implemented GitOps toolset and principles"
    ],
    logo: "/assets/microsoft_logo.jpeg",
  }
];
---

<main class="page">
  <!-- Hero -->
  <section class="section hero">
    <div class="inner hero-content">
      <div class="hero-text">
        <p class="hero-greeting"> My name is </p>
        <h1 class="name">Justin</h1>
        <p class="role">Lead Software Engineer</p>
        <p class="company">Department of Employment and Workplace</p>
      </div>
      <div class="hero-image">
        <img src="/assets/profile_anime.png" alt="My anime profile image" 
             class="profile-img" />
      </div>
    </div>
  </section>

  <!-- Summary -->
  <section class="section summary">
    <div class="inner">
      <h2>About Me</h2>
      <div class="summary-content">
        <p class="lead summary-text">
          As a Lead Software and AI Engineer on the department's Innovation team, I build and design scalable experimentation and AIOps platforms.
        </p>
        <p class="lead summary-text">
          These platforms enable cheap, fast, evaluation-based AI experiments and ensure a consistent flow of ideas from experimentation to production, empowering teams to deliver impactful solutions efficiently.
        </p>
      </div>
    </div>
  </section>

  <!-- Experience -->
  <section class="section experience">
    <div class="inner">
      <ExperienceCarousel experiences={experiences} />
    </div>
  </section>

  <!-- Skills -->
  <section class="section skills">
    <div class="inner">
      <h2>Skills</h2>
      <div class="skills-grid">
        {skills.map(skill => (
          <SkillCard 
            name={skill.name}
            description={skill.description}
            logoSrc={skill.logoSrc}
          />
        ))}
      </div>
    </div>
  </section>

  <!-- Contact -->
  <section class="section contact">
    <div class="inner">
      <h2>Let's Connect</h2>
      <p class="contact-intro">I'm always interested in discussing new opportunities, innovative projects, or just having a good conversation about technology.</p>
      
      <div class="contact-links">
        <a href="https://www.linkedin.com/in/justin-barias-89ba6521/" target="_blank" rel="noopener noreferrer" class="contact-link">
          <div class="contact-icon">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
              <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
            </svg>
          </div>
          <div class="contact-info">
            <span class="contact-title">LinkedIn</span>
            <span class="contact-subtitle">Professional Network</span>
          </div>
        </a>

        <a href="mailto:justinbarias@live.com" class="contact-link">
          <div class="contact-icon">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
              <path d="M24 5.457v13.909c0 .904-.732 1.636-1.636 1.636h-3.819V11.73L12 16.64l-6.545-4.91v9.273H1.636A1.636 1.636 0 0 1 0 19.366V5.457c0-.904.732-1.636 1.636-1.636h1.64l8.724 6.545 8.724-6.545h1.64c.904 0 1.636.732 1.636 1.636z"/>
            </svg>
          </div>
          <div class="contact-info">
            <span class="contact-title">Email</span>
            <span class="contact-subtitle">justinbarias@live.com</span>
          </div>
        </a>

        <a href="/assets/justinbarias-cv.pdf" download class="contact-link">
          <div class="contact-icon">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
              <path d="M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M18,20H6V4H13V9H18V20Z"/>
            </svg>
          </div>
          <div class="contact-info">
            <span class="contact-title">Resume</span>
            <span class="contact-subtitle">Download PDF</span>
          </div>
        </a>
      </div>
    </div>
  </section>
</main>

<style>
  /* Scoped Astro styles (replacing utility classes) */
  * {
    box-sizing: border-box;
    max-width: 100%;
  }
  
  .page {
    height: 100vh;
    overflow-y: auto;
    overflow-x: hidden;
    scroll-snap-type: y mandatory;
    -webkit-overflow-scrolling: touch;
    /* match site background and text color */
    background-color: var(--background-body);
    color: var(--text-main);
    width: 100vw;
    max-width: 100%;
  }

  .section {
    min-height: 100vh;
    display: flex;
    align-items: flex-start;
    justify-content: center;
    padding: 8rem 1.25rem 1.5rem;
    scroll-snap-align: start;
    box-sizing: border-box;
    width: 100%;
    max-width: 100vw;
    overflow-x: hidden;
  }

  .inner {
    max-width: 900px;
    width: 100%;
    text-align: center;
    padding: 0 1rem;
    box-sizing: border-box;
    min-width: 0; /* Allows flex items to shrink below content size */
  }

  /* Hero Section Styles */
  .hero-content {
    display: flex;
    align-items: center;
    gap: 3rem;
    text-align: left;
    width: 100%;
    max-width: 100%;
  }

  .hero-text {
    flex: 1;
    text-align: center;
    min-width: 0; /* Allows flex item to shrink */
    max-width: 100%;
  }

  .hero-image {
    flex: 1;
    text-align: center;
    min-width: 0; /* Allows flex item to shrink */
    max-width: 100%;
  }

  .hero-greeting {
    font-size: 1.125rem;
    margin-bottom: 0.5rem;
  }

  .profile-img {
    max-width: 100%;
    height: auto;
    border-radius: 50%;
    max-height: 400px;
    width: auto;
  }

  /* keep sections transparent so the component matches the site's background */
  .hero,
  .summary,
  .experience,
  .skills,
  .contact {
    background: transparent;
    color: inherit;
  }

  .skills {
    padding-top: 4rem;
  }

  .experience {
    padding-top: 4rem;
  }

  /* Contact Section Styles */
  .contact-intro {
    font-size: 1.125rem;
    line-height: 1.6;
    opacity: 0.9;
    margin-bottom: 2.5rem;
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
  }

  .contact-links {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    max-width: 500px;
    margin: 0 auto;
  }

  .contact-link {
    display: flex;
    align-items: center;
    gap: 1.5rem;
    padding: 1.5rem;
    background: rgba(255,255,255,0.03);
    border-radius: 12px;
    border: 1px solid rgba(255,255,255,0.1);
    text-decoration: none;
    color: inherit;
    transition: all 0.3s ease;
  }

  .contact-link:hover {
    background: rgba(255,255,255,0.06);
    transform: translateY(-2px);
    box-shadow: 0 8px 24px rgba(0,0,0,0.2);
    border-color: rgba(255,255,255,0.2);
  }

  .contact-icon {
    width: 48px;
    height: 48px;
    border-radius: 12px;
    background: rgba(255,255,255,0.1);
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
  }

  .contact-info {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
    text-align: left;
  }

  .contact-title {
    font-size: 1.125rem;
    font-weight: 600;
    color: inherit;
  }

  .contact-subtitle {
    font-size: 0.95rem;
    opacity: 0.7;
  }

  .name { 
    font-size: clamp(2.5rem, 5vw, 3.5rem); 
    margin: 0 0 0.5rem; 
    font-weight: 700;
    word-wrap: break-word;
    overflow-wrap: break-word;
    hyphens: auto;
  }
  .role { 
    font-size: clamp(1.125rem, 2.5vw, 1.5rem); 
    margin: 0 0 0.25rem; 
    opacity: 0.95;
    word-wrap: break-word;
    overflow-wrap: break-word;
    hyphens: auto;
  }
  .company { 
    font-size: clamp(1rem, 2vw, 1.125rem); 
    margin: 0; 
    opacity: 0.85;
    word-wrap: break-word;
    overflow-wrap: break-word;
    hyphens: auto;
  }

  h2 { 
    font-size: clamp(1.5rem, 3vw, 2rem); 
    margin-bottom: 1rem;
    word-wrap: break-word;
    overflow-wrap: break-word;
    hyphens: auto;
  }
  .lead { 
    font-size: clamp(1rem, 2vw, 1.125rem); 
    line-height: 1.8; 
    margin: 0 auto;
    word-wrap: break-word;
    overflow-wrap: break-word;
    hyphens: auto;
  }

  .summary-content {
    max-width: 700px;
    margin: 0 auto;
    display: flex;
    flex-direction: column;
    gap: 1.25rem;
  }

  .summary-text {
    text-align: left;
    margin: 0;
    word-wrap: break-word;
    overflow-wrap: break-word;
    hyphens: auto;
    -webkit-hyphens: auto;
    -ms-hyphens: auto;
    white-space: normal;
  }

  .hero-greeting {
    font-size: clamp(1rem, 2vw, 1.125rem);
    margin-bottom: 0.5rem;
  }

  .list { list-style: none; padding: 0; margin: 0; font-size: 1.05rem; line-height: 1.8; }
  .list li { margin: 0.5rem 0; }



  .skills-grid { 
    display: grid; 
    grid-template-columns: repeat(3, 1fr); 
    gap: 1.5rem; 
    margin-top: 2rem; 
    align-items: stretch;
  }

  /* Responsive */
  @media (max-width: 1024px) {
    .section {
      padding: 6rem 1rem 1.5rem;
    }
    
    .inner {
      max-width: 800px;
      padding: 0 0.75rem;
    }

    .hero-content {
      gap: 2.5rem;
    }

    .summary-content {
      max-width: 600px;
      gap: 1rem;
    }
    
    .summary-text {
      font-size: clamp(1rem, 2.2vw, 1.1rem);
    }
  }

  @media (max-width: 768px) {
    .section {
      padding: 4rem 0.75rem 1.25rem;
    }
    
    .inner {
      padding: 0 0.5rem;
    }

    .hero-content {
      flex-direction: column;
      gap: 2rem;
      text-align: center;
    }

    .hero-text, .hero-image {
      flex: none;
      width: 100%;
    }

    .profile-img {
      max-height: 250px;
    }

    .summary-content {
      max-width: 100%;
      gap: 0.875rem;
    }
    
    .summary-text {
      font-size: clamp(0.95rem, 2.5vw, 1.05rem);
      line-height: 1.7;
      text-align: center;
    }

    .skills-grid { 
      grid-template-columns: repeat(2, 1fr); 
      gap: 1.25rem;
    }
  }

  @media (max-width: 640px) {
    .section {
      padding: 3rem 5vw 2rem;
      min-height: auto;
      overflow-x: hidden;
    }
    
    .hero.section {
      min-height: 100vh;
      display: flex;
      align-items: center;
    }
    
    .inner {
      padding: 0 3vw;
      max-width: 100%;
      width: 100%;
    }

    .hero-content {
      gap: 1.5rem;
    }

    .profile-img {
      max-height: 200px;
    }

    .summary-content {
      gap: 1rem;
      padding: 0 0.5rem;
      width: 100%;
      box-sizing: border-box;
    }
    
    .summary-text {
      font-size: clamp(0.875rem, 4vw, 1rem);
      line-height: 1.6;
      padding: 0 0.75rem;
      text-align: center;
    }

    .skills-grid { 
      grid-template-columns: 1fr; 
      gap: 1rem;
    }
    
    .contact-intro {
      font-size: clamp(0.9rem, 2vw, 1rem);
      margin-bottom: 2rem;
    }
    
    .contact-links {
      gap: 1.25rem;
    }
    
    .contact-link {
      padding: 1.25rem;
      gap: 1.25rem;
    }
    
    .contact-icon {
      width: 40px;
      height: 40px;
    }
    
    .contact-title {
      font-size: clamp(0.9rem, 2vw, 1rem);
    }
    
    .contact-subtitle {
      font-size: clamp(0.8rem, 1.8vw, 0.875rem);
    }
    
    .page { 
      scroll-padding-top: 20px; 
    }
  }

  @media (max-width: 480px) {
    .section {
      padding: 2.5rem 4vw 1.5rem;
      overflow-x: hidden;
    }
    
    .inner {
      padding: 0 2vw;
      width: 100%;
    }

    .summary-content {
      gap: 0.875rem;
      padding: 0 0.25rem;
    }
    
    .summary-text {
      font-size: clamp(0.8rem, 4.5vw, 0.95rem);
      line-height: 1.55;
      padding: 0 0.5rem;
    }

    h2 {
      font-size: clamp(1.25rem, 5vw, 1.75rem);
      margin-bottom: 0.875rem;
    }
  }

  @media (max-width: 360px) {
    .section {
      padding: 2rem 3vw 1.25rem;
      overflow-x: hidden;
    }
    
    .inner {
      padding: 0 1vw;
      width: 100%;
    }
    
    .summary-content {
      gap: 0.75rem;
      padding: 0;
    }
    
    .summary-text {
      font-size: clamp(0.75rem, 5vw, 0.9rem);
      line-height: 1.5;
      padding: 0 0.75rem;
    }
  }

  /* Hide scrollbar but keep scrolling functional */
  :global(.page::-webkit-scrollbar) { width: 0; height: 0; }
  :global(.page) { -ms-overflow-style: none; scrollbar-width: none; }

  /* Scroll hint arrows (global so appended elements get styled) */
  :global(.scroll-hints) {
    position: fixed;
    right: 1rem;
    bottom: 2rem;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    z-index: 9999;
    transition: opacity 200ms ease;
  }

  @media (max-width: 640px) {
    :global(.scroll-hints) {
      right: 0.5rem;
      bottom: 1.5rem;
    }
    
    :global(.scroll-arrow) {
      width: 36px;
      height: 36px;
    }
  }

  :global(.scroll-hints.hidden) { opacity: 0; pointer-events: none; }

  :global(.scroll-arrow) {
    width: 44px;
    height: 44px;
    display: grid;
    place-items: center;
    background: rgba(0,0,0,0.5);
    color: #fff;
    border-radius: 999px;
    cursor: pointer;
    box-shadow: 0 6px 18px rgba(2,6,23,0.6);
    transition: transform 180ms ease, background 180ms ease;
  }

  :global(.scroll-arrow:hover) { transform: translateY(-4px); background: rgba(0,0,0,0.65); }

  :global(.arrow-icon) {
    border: solid currentColor;
    border-width: 0 2px 2px 0;
    display: inline-block;
    padding: 6px;
  }

  :global(.arrow-down) { transform: rotate(45deg); }
  :global(.arrow-up) { transform: rotate(-135deg); }
</style>

<script type="module">
  // Scroll hint behavior: navigate to next/prev section and auto-hide on inactivity
  // Prefer the inner .page scroll container; fall back to document scrolling
  let page = document.querySelector('.page');
  if (!page) page = document.scrollingElement || document.documentElement;
  const nextBtn = document.createElement('button');
  const prevBtn = document.createElement('button');

  nextBtn.className = 'scroll-arrow';
  prevBtn.className = 'scroll-arrow';
  nextBtn.setAttribute('aria-label', 'Scroll to next section');
  prevBtn.setAttribute('aria-label', 'Scroll to previous section');
  nextBtn.setAttribute('role', 'button');
  prevBtn.setAttribute('role', 'button');
  nextBtn.tabIndex = 0;
  prevBtn.tabIndex = 0;

  nextBtn.innerHTML = '<i class="arrow-icon arrow-down" aria-hidden="true"></i>';
  prevBtn.innerHTML = '<i class="arrow-icon arrow-up" aria-hidden="true"></i>';

  const hints = document.createElement('div');
  hints.className = 'scroll-hints';
  hints.appendChild(prevBtn);
  hints.appendChild(nextBtn);
  document.body.appendChild(hints);

  function getSections() {
    return Array.from(document.querySelectorAll('.section'));
  }

  function scrollToSection(index) {
    const sections = getSections();
    const s = sections[index];
    if (!s) return;
    // If we have a dedicated scroll container (.page), scroll it to the section's offset
    if (page && page !== document.scrollingElement && page !== document.documentElement) {
      // compute delta relative to the container's viewport and scroll by that amount
      const containerRect = page.getBoundingClientRect();
      const secRect = s.getBoundingClientRect();
      const delta = secRect.top - containerRect.top;
      page.scrollBy({ top: delta, behavior: 'smooth' });
    } else {
      // Fallback: scroll the document so the section is visible in viewport
      s.scrollIntoView({ behavior: 'smooth' });
    }
  }

  function currentSectionIndex() {
    const sections = getSections();
    if (!sections.length) return 0;
    // Use bounding rects so this stays accurate during smooth scrolling animations
    const isDocumentScroll = page === document.scrollingElement || page === document.documentElement;
    const containerTop = isDocumentScroll ? 0 : page.getBoundingClientRect().top;
    let bestIdx = 0;
    let bestDistance = Infinity;
    sections.forEach((s, i) => {
      const rect = s.getBoundingClientRect();
      const distance = Math.abs(rect.top - containerTop);
      if (distance < bestDistance) {
        bestDistance = distance;
        bestIdx = i;
      }
    });
    return bestIdx;
  }

  nextBtn.addEventListener('click', () => {
    const idx = currentSectionIndex();
    scrollToSection(Math.min(getSections().length - 1, idx + 1));
  });

  prevBtn.addEventListener('click', () => {
    const idx = currentSectionIndex();
    scrollToSection(Math.max(0, idx - 1));
  });

  // toggle prev/next visibility depending on position
  function updateHintVisibility() {
    const idx = currentSectionIndex();
    const total = getSections().length;
    prevBtn.style.display = idx > 0 ? 'grid' : 'none';
    nextBtn.style.display = idx < total - 1 ? 'grid' : 'none';
  }

  page.addEventListener('scroll', updateHintVisibility, { passive: true });
  updateHintVisibility();

  // Auto-hide hints after inactivity
  let hideTimer = null;
  function showHints() { hints.classList.remove('hidden'); clearTimeout(hideTimer); hideTimer = setTimeout(() => hints.classList.add('hidden'), 2500); }
  // Show hints on interactions. Also listen to the scroll container's scroll event.
  ['mousemove', 'touchstart', 'keydown'].forEach(ev => document.addEventListener(ev, showHints, { passive: true }));
  if (page) page.addEventListener('scroll', showHints, { passive: true });
  showHints();
</script>
